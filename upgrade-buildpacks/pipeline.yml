# Copyright 2017-Present Pivotal Software, Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

resources:
- name: cf-cli
  type: s3
  source:
    bucket: cf-cli-releases
    region_name: us-west-1
    regexp: releases/v([\d\.]+)/cf-cli_.*_linux_x86-64.tgz

- name: pcf-pipelines-tarball
  type: pivnet
  source:
    api_token: {{pivnet_token}}
    product_slug: pcf-automation
    product_version: v0.10.0

- name: binary-buildpack
  type: pivnet
  check_every: {{pivnet_poll_interval}}
  source:
    api_token: {{pivnet_token}}
    product_slug: buildpacks
    product_version: Binary*

- name: dotnet-core-buildpack
  type: pivnet
  check_every: {{pivnet_poll_interval}}
  source:
    api_token: {{pivnet_token}}
    product_slug: buildpacks
    product_version: .NET*

- name: go-buildpack
  type: pivnet
  check_every: {{pivnet_poll_interval}}
  source:
    api_token: {{pivnet_token}}
    product_slug: buildpacks
    product_version: Go*

- name: java-buildpack
  type: pivnet
  check_every: {{pivnet_poll_interval}}
  source:
    api_token: {{pivnet_token}}
    product_slug: buildpacks
    product_version: Java*

- name: nodejs-buildpack
  type: pivnet
  check_every: {{pivnet_poll_interval}}
  source:
    api_token: {{pivnet_token}}
    product_slug: buildpacks
    product_version: NodeJS*

- name: php-buildpack
  type: pivnet
  check_every: {{pivnet_poll_interval}}
  source:
    api_token: {{pivnet_token}}
    product_slug: buildpacks
    product_version: PHP*

- name: python-buildpack
  type: pivnet
  check_every: {{pivnet_poll_interval}}
  source:
    api_token: {{pivnet_token}}
    product_slug: buildpacks
    product_version: Python*

- name: ruby-buildpack
  type: pivnet
  check_every: {{pivnet_poll_interval}}
  source:
    api_token: {{pivnet_token}}
    product_slug: buildpacks
    product_version: Ruby*

- name: staticfile-buildpack
  type: pivnet
  check_every: {{pivnet_poll_interval}}
  source:
    api_token: {{pivnet_token}}
    product_slug: buildpacks
    product_version: Staticfile*

- name: tc-buildpack
  type: pivnet
  check_every: {{pivnet_poll_interval}}
  source:
    api_token: {{pivnet_token}}
    product_slug: buildpacks
    product_version: "tc Server*"

- name: schedule
  type: time
  source:
    interval: 30m
    start: "12:00 AM"
    stop: "11:59 PM"
    location: America/Los_Angeles
    days: [Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday]

jobs:
- name: regulator
  plan:
  - aggregate:
    - get: schedule
      trigger: true
    - get: binary-buildpack
      params: { globs: [] }
    - get: dotnet-core-buildpack
      params: { globs: [] }
    - get: go-buildpack
      params: { globs: [] }
    - get: java-buildpack
      params: { globs: [] }
    - get: nodejs-buildpack
      params: { globs: [] }
    - get: php-buildpack
      params: { globs: [] }
    - get: python-buildpack
      params: { globs: [] }
    - get: ruby-buildpack
      params: { globs: [] }
    - get: staticfile-buildpack
      params: { globs: [] }
    - get: tc-buildpack
      params: { globs: [] }

- name: stage-binary-buildpack
  serial_groups: [cc-api]
  plan:
  - aggregate:
    - do:
      - get: pcf-pipelines-tarball
      - task: unpack-tarball
        <<: *unpack_tarball_config
    - get: cf-cli
    - get: buildpack
      resource: binary-buildpack
      trigger: true
      passed: [regulator]

  - task: stage
    file: pcf-pipelines/tasks/stage-buildpack/task.yml
    params:
      <<: *cf_api_params
      BUILDPACK_NAME: binary_buildpack_latest

- name: promote-binary-buildpack
  serial_groups: [cc-api]
  plan:
  - aggregate:
    - get: cf-cli
      passed: [stage-binary-buildpack]
    - do:
      - get: pcf-pipelines-tarball
        passed: [stage-binary-buildpack]
      - task: unpack-tarball
        <<: *unpack_tarball_config
  - task: promote
    file: pcf-pipelines/tasks/promote-buildpack/task.yml
    params:
      <<: *cf_api_params
      SOURCE_BUILDPACK_NAME: binary_buildpack_latest
      TARGET_BUILDPACK_NAME: binary_buildpack

- name: stage-dotnet-buildpack
  serial_groups: [cc-api]
  plan:
  - aggregate:
    - get: cf-cli
    - do:
      - get: pcf-pipelines-tarball
      - task: unpack-tarball
        <<: *unpack_tarball_config
    - get: buildpack
      resource: dotnet-core-buildpack
      passed: [regulator]
      trigger: true

  - task: stage
    file: pcf-pipelines/tasks/stage-buildpack/task.yml
    params:
      <<: *cf_api_params
      BUILDPACK_NAME: dotnet_core_buildpack_offline_latest

- name: promote-dotnet-buildpack
  serial_groups: [cc-api]
  plan:
  - aggregate:
    - get: cf-cli
      passed: [stage-dotnet-buildpack]
    - do:
      - get: pcf-pipelines-tarball
        passed: [stage-dotnet-buildpack]
      - task: unpack-tarball
        <<: *unpack_tarball_config
  - task: promote
    file: pcf-pipelines/tasks/promote-buildpack/task.yml
    params:
      <<: *cf_api_params
      SOURCE_BUILDPACK_NAME: dotnet_core_buildpack_offline_latest
      TARGET_BUILDPACK_NAME: dotnet_core_buildpack_offline

- name: stage-go-buildpack
  serial_groups: [cc-api]
  plan:
  - aggregate:
    - get: cf-cli
    - do:
      - get: pcf-pipelines-tarball
      - task: unpack-tarball
        <<: *unpack_tarball_config
    - get: buildpack
      resource: go-buildpack
      passed: [regulator]
      trigger: true

  - task: stage
    file: pcf-pipelines/tasks/stage-buildpack/task.yml
    params:
      <<: *cf_api_params
      BUILDPACK_NAME: go_buildpack_latest

- name: promote-go-buildpack
  serial_groups: [cc-api]
  plan:
  - aggregate:
    - get: cf-cli
      passed: [stage-go-buildpack]
    - do:
      - get: pcf-pipelines-tarball
        passed: [stage-go-buildpack]
      - task: unpack-tarball
        <<: *unpack_tarball_config
  - task: promote
    file: pcf-pipelines/tasks/promote-buildpack/task.yml
    params:
      <<: *cf_api_params
      SOURCE_BUILDPACK_NAME: go_buildpack_latest
      TARGET_BUILDPACK_NAME: go_buildpack

- name: stage-java-buildpack
  serial_groups: [cc-api]
  plan:
  - aggregate:
    - get: cf-cli
    - do:
      - get: pcf-pipelines-tarball
      - task: unpack-tarball
        <<: *unpack_tarball_config
    - get: buildpack
      passed: [regulator]
      resource: java-buildpack
      trigger: true
      params:
        globs:
        - "*offline*"

  - task: stage
    file: pcf-pipelines/tasks/stage-buildpack/task.yml
    params:
      <<: *cf_api_params
      BUILDPACK_NAME: java_buildpack_offline_latest

- name: promote-java-buildpack
  serial_groups: [cc-api]
  plan:
  - aggregate:
    - get: cf-cli
      passed: [stage-java-buildpack]
    - do:
      - get: pcf-pipelines-tarball
        passed: [stage-java-buildpack]
      - task: unpack-tarball
        <<: *unpack_tarball_config
  - task: promote
    file: pcf-pipelines/tasks/promote-buildpack/task.yml
    params:
      <<: *cf_api_params
      SOURCE_BUILDPACK_NAME: java_buildpack_offline_latest
      TARGET_BUILDPACK_NAME: java_buildpack_offline

- name: stage-nodejs-buildpack
  serial_groups: [cc-api]
  plan:
  - aggregate:
    - get: cf-cli
    - do:
      - get: pcf-pipelines-tarball
      - task: unpack-tarball
        <<: *unpack_tarball_config
    - get: buildpack
      passed: [regulator]
      resource: nodejs-buildpack
      trigger: true

  - task: stage
    file: pcf-pipelines/tasks/stage-buildpack/task.yml
    params:
      <<: *cf_api_params
      BUILDPACK_NAME: nodejs_buildpack_latest

- name: promote-nodejs-buildpack
  serial_groups: [cc-api]
  plan:
  - aggregate:
    - get: cf-cli
      passed: [stage-nodejs-buildpack]
    - do:
      - get: pcf-pipelines-tarball
        passed: [stage-nodejs-buildpack]
      - task: unpack-tarball
        <<: *unpack_tarball_config
  - task: promote
    file: pcf-pipelines/tasks/promote-buildpack/task.yml
    params:
      <<: *cf_api_params
      SOURCE_BUILDPACK_NAME: nodejs_buildpack_latest
      TARGET_BUILDPACK_NAME: nodejs_buildpack

- name: stage-php-buildpack
  serial_groups: [cc-api]
  plan:
  - aggregate:
    - get: cf-cli
    - do:
      - get: pcf-pipelines-tarball
      - task: unpack-tarball
        <<: *unpack_tarball_config
    - get: buildpack
      passed: [regulator]
      resource: php-buildpack
      trigger: true

  - task: stage
    file: pcf-pipelines/tasks/stage-buildpack/task.yml
    params:
      <<: *cf_api_params
      BUILDPACK_NAME: php_buildpack_latest

- name: promote-php-buildpack
  serial_groups: [cc-api]
  plan:
  - aggregate:
    - get: cf-cli
      passed: [stage-php-buildpack]
    - do:
      - get: pcf-pipelines-tarball
        passed: [stage-php-buildpack]
      - task: unpack-tarball
        <<: *unpack_tarball_config
  - task: promote
    file: pcf-pipelines/tasks/promote-buildpack/task.yml
    params:
      <<: *cf_api_params
      SOURCE_BUILDPACK_NAME: php_buildpack_latest
      TARGET_BUILDPACK_NAME: php_buildpack

- name: stage-python-buildpack
  serial_groups: [cc-api]
  plan:
  - aggregate:
    - get: cf-cli
    - do:
      - get: pcf-pipelines-tarball
      - task: unpack-tarball
        <<: *unpack_tarball_config
    - get: buildpack
      passed: [regulator]
      resource: python-buildpack
      trigger: true

  - task: stage
    file: pcf-pipelines/tasks/stage-buildpack/task.yml
    params:
      <<: *cf_api_params
      BUILDPACK_NAME: python_buildpack_latest

- name: promote-python-buildpack
  serial_groups: [cc-api]
  plan:
  - aggregate:
    - get: cf-cli
      passed: [stage-python-buildpack]
    - do:
      - get: pcf-pipelines-tarball
        passed: [stage-python-buildpack]
      - task: unpack-tarball
        <<: *unpack_tarball_config
  - task: promote
    file: pcf-pipelines/tasks/promote-buildpack/task.yml
    params:
      <<: *cf_api_params
      SOURCE_BUILDPACK_NAME: python_buildpack_latest
      TARGET_BUILDPACK_NAME: python_buildpack

- name: stage-ruby-buildpack
  serial_groups: [cc-api]
  plan:
  - aggregate:
    - get: cf-cli
    - do:
      - get: pcf-pipelines-tarball
      - task: unpack-tarball
        <<: *unpack_tarball_config
    - get: buildpack
      passed: [regulator]
      resource: ruby-buildpack
      trigger: true

  - task: stage
    file: pcf-pipelines/tasks/stage-buildpack/task.yml
    params:
      <<: *cf_api_params
      BUILDPACK_NAME: ruby_buildpack_latest

- name: promote-ruby-buildpack
  serial_groups: [cc-api]
  plan:
  - aggregate:
    - get: cf-cli
      passed: [stage-ruby-buildpack]
    - do:
      - get: pcf-pipelines-tarball
        passed: [stage-ruby-buildpack]
      - task: unpack-tarball
        <<: *unpack_tarball_config
  - task: promote
    file: pcf-pipelines/tasks/promote-buildpack/task.yml
    params:
      <<: *cf_api_params
      SOURCE_BUILDPACK_NAME: ruby_buildpack_latest
      TARGET_BUILDPACK_NAME: ruby_buildpack

- name: stage-staticfile-buildpack
  serial_groups: [cc-api]
  plan:
  - aggregate:
    - get: cf-cli
    - do:
      - get: pcf-pipelines-tarball
      - task: unpack-tarball
        <<: *unpack_tarball_config
    - get: buildpack
      passed: [regulator]
      resource: staticfile-buildpack
      trigger: true

  - task: stage
    file: pcf-pipelines/tasks/stage-buildpack/task.yml
    params:
      <<: *cf_api_params
      BUILDPACK_NAME: staticfile_buildpack_latest

- name: promote-staticfile-buildpack
  serial_groups: [cc-api]
  plan:
  - aggregate:
    - get: cf-cli
      passed: [stage-staticfile-buildpack]
    - do:
      - get: pcf-pipelines-tarball
        passed: [stage-staticfile-buildpack]
      - task: unpack-tarball
        <<: *unpack_tarball_config
  - task: promote
    file: pcf-pipelines/tasks/promote-buildpack/task.yml
    params:
      <<: *cf_api_params
      SOURCE_BUILDPACK_NAME: staticfile_buildpack_latest
      TARGET_BUILDPACK_NAME: staticfile_buildpack

- name: stage-tcserver-buildpack
  serial_groups: [cc-api]
  plan:
  - aggregate:
    - get: cf-cli
    - do:
      - get: pcf-pipelines-tarball
      - task: unpack-tarball
        <<: *unpack_tarball_config
    - get: buildpack
      passed: [regulator]
      resource: tc-buildpack
      trigger: true
      params:
        globs:
        - "*offline*"

  - task: stage
    file: pcf-pipelines/tasks/stage-buildpack/task.yml
    params:
      <<: *cf_api_params
      BUILDPACK_NAME: tc_buildpack_latest

- name: promote-tcserver-buildpack
  serial_groups: [cc-api]
  plan:
  - aggregate:
    - get: cf-cli
      passed: [stage-tcserver-buildpack]
    - do:
      - get: pcf-pipelines-tarball
        passed: [stage-tcserver-buildpack]
      - task: unpack-tarball
        <<: *unpack_tarball_config

  - task: promote
    file: pcf-pipelines/tasks/promote-buildpack/task.yml
    params:
      <<: *cf_api_params
      SOURCE_BUILDPACK_NAME: tc_buildpack_latest
      TARGET_BUILDPACK_NAME: tc_buildpack

cf_api_params: &cf_api_params
  CF_API_URI: {{cf_api_uri}}
  CF_USERNAME: {{cf_user}}
  CF_PASSWORD: {{cf_password}}

unpack_tarball_config: &unpack_tarball_config
  config:
    platform: linux
    image_resource:
      type: docker-image
      source:
        repository: cloudfoundry/cflinuxfs2
    inputs:
    - name: pcf-pipelines-tarball
    outputs:
    - name: pcf-pipelines
    run:
     path: sh
     args: ["-c", "tar -xvf pcf-pipelines-tarball/*.tgz"]
